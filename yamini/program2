import java.util.*;
import java.util.scanner;
public class DoubleLinkedList {
	private ListNode head;
	private ListNode tail;
	private int length;

	public class ListNode {
		private ListNode previous;
		private ListNode next;
		private int data;

		ListNode(int data) {
			this.data = data;
		}
	}

	public DoubleLinkedList() {
		this.head = null;
		this.tail = null;
		this.length = 0;

	}

	public boolean isEmpty() {
		return length == 0;

	}

	public int length() {
		return length;
	}

	public void displayForward() {
		if (head == null) {
			return;
		}
		ListNode temp = head;
		while (temp != null) {
			System.out.print(temp.data + "-->");
			temp = temp.next;
		}
		System.out.println("null");

	}

	public void displayBackward() {
		if (tail == null) {
			return;

		}
		ListNode temp=tail;
		while(temp!=null) {
			System.out.print(temp.data+"-->");
			temp=temp.previous;
	}System.out.println("null");

	}
	public void insertLast(int value) {
		ListNode newNode= new ListNode(value);
		if(isEmpty()) {
			head=newNode;
		}else {
			tail.next=newNode;
		}newNode.previous=tail;
		tail=newNode;
		length++;
	}

	public static void main(String[] args) {
		DoubleLinkedList dll=new DoubleLinkedList();
		dll.insertLast(15);
		dll.insertLast(30);
		dll.insertLast(45);
		dll.insertLast(60);
		dll.displayForward();
		dll.displayBackward();

	}

}
